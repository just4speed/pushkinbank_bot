const express = require("express");
const app = express();
const mongoose = require("mongoose");

const { Telegraf, session, Scenes } = require("telegraf");
const { Keyboard } = require("telegram-keyboard");

const { Customer, Payment } = require("./models");
// Scenes
const enterCodeScene = require("./scenes/enterCode");
const withdrawScene = require("./scenes/withdraw");
const supportScene = require("./scenes/support");

const faq = require("./faq.json");
// Bot init
const BOT_TOKEN = "5141657441:AAHFsGLxSZeXJU2haEk3F0IJTcOrNWRPDnM";
const bot = new Telegraf(BOT_TOKEN);

const stage = new Scenes.Stage([ enterCodeScene, withdrawScene, supportScene ]);

bot.use(session());
bot.use(stage.middleware());
// Mongoose
const uri = `mongodb+srv://pharaon4ik:1password@cluster0.i2dad.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;
mongoose.connect(uri, { useNewUrlParser: true });
const connection = mongoose.connection;
connection.once('open', () => {
  console.log("MongoDB database connection established successfully");
})
connection.on("error", e => console.log(e))

const exit_keyboard = Keyboard.make([
    ['–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é'], 
]);
const default_keyboard = Keyboard.make([
    ['–í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'],
    ["–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
    ['–ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'FAQ'], 
]);

const faqSource = JSON.parse(JSON.stringify(faq));

bot.hears("–í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏", ctx => {
    Payment.find({ "status": 1 }, (err, foundPayments) => {
        const alreadyRequestedPayment = foundPayments.find(p => p.customer.telegram_id === String(ctx.message.from.id));
        if(alreadyRequestedPayment){
            ctx.replyWithHTML(`–£ –≤–∞—Å —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ ${alreadyRequestedPayment.amount}P`, {
                reply_markup: {
                    inline_keyboard: [
                        [ { text: "–û—Ç–º–µ–Ω–∏—Ç—å", callback_data: "cancel_current_order_" + alreadyRequestedPayment._id } ],
                    ]
                }
            });
        } else {
            ctx.replyWithHTML("–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ç—Ä–µ—Ö —ç—Ç–∞–ø–æ–≤:\n\n1. –£–∫–∞–∑–∞–Ω–∏–µ <b>–Ω–æ–º–µ—Ä–∞, –¥–∞—Ç—ã –∏ CVV –∫–æ–¥–∞ –ü—É—à–∫–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç—ã</b>, —Å –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞, –∞ —Ç–∞–∫–∂–µ —Å—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏\n\n2. –£–∫–∞–∑–∞–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ (–í–∞—à–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ / Qiwi-–∫–æ—à–µ–ª—ë–∫ / –ë–∞–ª–∞–Ω—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞)\n\n3. –î–æ–∂–¥–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ –≤–∞–º –ø—Ä–∏–¥—ë—Ç SMS –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã, —Å –∫–æ–¥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–¥–µ—Å—å —É–∫–∞–∑–∞—Ç—å", {
                reply_markup: {
                    inline_keyboard: [
                        [ { text: "üöÄ –î–∞, —è —Ö–æ—á—É –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏", callback_data: "startWithdraw" } ],
                    ]
                }
            });
        }
    }).populate("customer");
});
bot.action("startWithdraw", ctx => {
    ctx.scene.enter("withdrawWizard").then(() => {
        ctx.replyWithHTML("üí≥ –í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä</b> –≤–∞—à–µ–π <b>–ü—É—à–∫–∏–Ω—Å–∫–æ–π</b> –∫–∞—Ä—Ç—ã", exit_keyboard.reply());
        ctx.wizard.state.data = {};
        ctx.wizard.state.msgHistory = {};
        return ctx.wizard.selectStep(1);
    });
});
bot.hears("–ü–æ–¥–¥–µ—Ä–∂–∫–∞", ctx => ctx.scene.enter("supportWizard"));

bot.hears("SMS", ctx => {
    const paymentId = ctx.message.reply_to_message.text.split("\n")[1];
    Payment.findOne({ _id: paymentId }, (err, paymentRequest) => {
        ctx.telegram.sendMessage(paymentRequest.customer.telegram_id, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –í–≤–µ–¥–∏—Ç–µ –≤ –æ—Ç–≤–µ—Ç –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –°–ú–° –∫–æ–¥', {
            reply_markup: {
                inline_keyboard: [
                    [ { text: "–í–≤–µ—Å—Ç–∏ –∫–æ–¥", callback_data: "enter_code_" + paymentRequest._id }, { text: "–û—Ç–º–µ–Ω–∞", callback_data: "cancel_current_order_" + paymentRequest._id } ]
                ]
            }
        });
    }).populate("customer");
});
bot.action(/enter_code_+/, ctx => {
    ctx.deleteMessage(ctx.update.callback_query.message.message_id);
    const paymentRequestId = ctx.match.input.substring(11).trim();
    ctx.scene.enter("enterCodeWizard", { paymentRequestId: paymentRequestId });
    ctx.replyWithHTML("–í–≤–µ–¥–∏—Ç–µ <b>SMS-–∫–æ–¥</b>");
});
bot.action(/cancel_current_order_+/, ctx => {
    const paymentRequestId = ctx.match.input.substring(21).trim();
    Payment.findByIdAndUpdate(paymentRequestId, {
        status: 0
    }, (err, canceled) => {
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É —Å –∑–∞—è–≤–∫–æ–π –Ω–∞ –≤—ã–ø–ª–∞—Ç—É, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –µ–≥–æ –õ–° –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏
        ctx.telegram.deleteMessage(1257409280, canceled.initialAdminMessage);
        ctx.reply("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–≤–æ—é –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–ø–ª–∞—Ç—É");
    });
});

bot.action(/successful_paymentRequest_+/, ctx => {
    const paymentRequestId = ctx.match.input.substring(26).trim();
    Payment.findByIdAndUpdate(paymentRequestId, {
        status: 2
    }, (err, paymentRequest) => {
        ctx.telegram.sendMessage(paymentRequest.customer.telegram_id, "‚úÖ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ ! –î–µ–Ω—å–≥–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç –≤–æ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π –≤–æ–ª–Ω—ã –≤—ã–ø–ª–∞—Ç: 31 –º–∞—è, 2022");
        // –ß–∏—Å—Ç–∏–º –∞–¥–º–∏–Ω—Å–∫—É—é –ª–∏—á–∫—É
        ctx.telegram.deleteMessage(1257409280, paymentRequest.initialAdminMessage);
        ctx.telegram.deleteMessage(1257409280, paymentRequest.smsRequestMessage);
        // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–æ–≤–æ–¥–∞, —á—Ç–æ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª –ø—Ä–æ–∏–∑–≤–µ–ª –≤—ã–ø–ª–∞—Ç—É
        Customer.findOne({ referrals: paymentRequest.customer._id }, (err2, referrer) => {
            if(referrer && !err2){
                ctx.telegram.sendMessage(referrer.telegram_id, "‚≠êÔ∏èüíµ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª –≤—ã–≤–æ–¥ –Ω–∞ " + paymentRequest.amount + "‚ÇΩ\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10% –æ—Ç –µ–≥–æ –≤—ã–≤–æ–¥–∞");
                referrer.balance = referrer.balance + (paymentRequest.amount / 100 * 10);
                referrer.save();
            }
        });
    }).populate("customer");
});
bot.action(/failed_paymentRequest_+/, ctx => {
    const paymentRequestId = ctx.match.input.substring(22).trim();
    Payment.findByIdAndUpdate(paymentRequestId, {
        status: 3
    }, (err, paymentRequest) => {
        ctx.telegram.sendMessage(paymentRequest.customer.telegram_id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.\n–°–∞–º—ã–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã: –°–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ SMS-–∫–æ–¥–∞ —Å –í–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã // –ë–∞–ª–∞–Ω—Å –ü—É—à–∫–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç—ã –º–µ–Ω—å—à–µ —Å—É–º–º—ã, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–µ–ª–∏ –≤—ã–≤–µ—Å—Ç–∏ // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π SMS-–∫–æ–¥.");
        // –ß–∏—Å—Ç–∏–º –∞–¥–º–∏–Ω—Å–∫—É—é –ª–∏—á–∫—É
        ctx.telegram.deleteMessage(1257409280, paymentRequest.initialAdminMessage);
        ctx.telegram.deleteMessage(1257409280, paymentRequest.smsRequestMessage);
    }).populate("customer");
});

bot.hears("–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", ctx => {
    const currentUserTelegramId = ctx.update.message.from.id;
    Customer.findOne({ telegram_id: currentUserTelegramId }, (err, user) => {
        ctx.replyWithHTML(`<b>–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏ 10% –æ—Ç —Å—É–º–º—ã, –∫–æ—Ç–æ—Ä—É—é –æ–Ω –≤ –∏—Ç–æ–≥–µ –≤—ã–≤–µ–¥–µ—Ç!</b>\n\nüí∞ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${user.balance}‚ÇΩ\n\nüöÄ –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π: https://t.me/pushkinbank_bot?start=${ctx.update.message.from.id}\n\n<i>–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∫—Ç–æ-–ª–∏–±–æ –∏–∑ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø—Ä–æ–≤–µ–¥—ë—Ç —É—Å–ø–µ—à–Ω—ã–π –≤—ã–≤–æ–¥ –¥–µ–Ω–µ–≥, –í–∞–º —Å—Ä–∞–∑—É –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞ –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å</i>`);
    });
});

bot.hears("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", ctx => {
    ctx.replyWithPhoto({ source: "./assets/info.png" }, { caption: "–ú—ã –ø–æ–º–æ–≥–∞–µ–º –ª—é–¥—è–º –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –¥–µ–Ω—å–≥–∏ —Å –ü—É—à–∫–∏–Ω—Å–∫–∏—Ö –∫–∞—Ä—Ç –Ω–∞ —Å–≤–æ–π —Å—á—ë—Ç, —á—Ç–æ–±—ã –í—ã –º–æ–≥–ª–∏ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–µ–±—è.\n\nüí∞ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: –ó–∞ –∫–∞–∂–¥—ã–µ 1.15‚ÇΩ —Å –ü—É—à–∫–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1‚ÇΩ —Ä–µ–∞–ª—å–Ω—ã–π\n(–ù–∞–ø—Ä., –∑–∞ –≤—ã–≤–æ–¥ 4500‚ÇΩ —Å –ü—É—à–∫–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç—ã –≤—ã –≤ –∏—Ç–æ–≥–µ –ø–æ–ª—É—á–∏—Ç–µ 3913‚ÇΩ —Ä–µ–∞–ª—å–Ω—ã—Ö –Ω–∞ —Å–≤–æ–π —Å—á—ë—Ç)\n\nüí¥ –ú—ã –≤—ã–≤–æ–¥–∏–º –¥–µ–Ω—å–≥–∏ –Ω–∞: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç (–õ—é–±–æ–π üá∑üá∫ –±–∞–Ω–∫), Qiwi, –ú–æ–±–∏–ª—å–Ω—ã–π —Å—á—ë—Ç (–ú–¢–°, –ú–µ–≥–∞—Ñ–æ–Ω)\n\nüíé –ß–µ—Ä–µ–∑ –Ω–∞—Å —É–∂–µ –≤—ã–≤–µ–¥–µ–Ω–æ: 1.455.940‚ÇΩ (–ù–∞ –º–æ–º–µ–Ω—Ç –ø—Ä–æ—à–ª–æ–π –≤–æ–ª–Ω—ã –≤—ã–ø–ª–∞—Ç 15.05.2022)" });
});

bot.hears("FAQ", ctx => {
    ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å", {
        reply_markup: {
            inline_keyboard: faqSource.faq.map(item => {
                return [ { text: item.questionText, callback_data: "question_" + item.id } ]
            })
        }
    });
});
bot.action(/question_+/, ctx => {
    const questionId = ctx.match.input.substring(9).trim();
    const questionItem = faqSource.faq.filter(i => String(i.id) === questionId);
    if(questionItem.length !== 0){
        ctx.replyWithHTML(questionItem[0].answer);
    } else {
        ctx.reply("–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
});

bot.hears(/ans\s.*/, ctx => {
    const initialMessage = ctx.update.message.reply_to_message.text;
    const issueCreator = initialMessage.split("\n")[1];
    const issueText = initialMessage.split("\n")[3];

    const issueReply = ctx.update.message.text.replace("ans ", "");
    ctx.deleteMessage(ctx.update.message.reply_to_message.message_id);
    ctx.telegram.sendMessage(issueCreator, `"${issueText}"\n\nüó£ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:\n${issueReply}`);
});

// Start bot
bot.start(ctx => {
    const { startPayload: referralCode } = ctx;
    const currentUserTelegramId = String(ctx.update.message.from.id);

    Customer.findOne({ telegram_id: currentUserTelegramId }, (err, user) => {
        console.log("err", err)
        console.log("user found", user)
        if(user === null || err){
            const newCustomer = new Customer({
                telegram_id: currentUserTelegramId
            });
            newCustomer.save((err, created) => {
                console.log("created new", created)
                if(referralCode !== ""){
                    Customer.findOneAndUpdate({ telegram_id: String(referralCode) }, {
                        $push: {
                            referrals: created._id
                        }
                    }, (err, success) => {
                        ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å !", default_keyboard.reply());
                    });
                }
            });
        } else {
            ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å !", default_keyboard.reply());
        }
    })
});

bot.hears(/.*/, ctx => ctx.reply("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏", default_keyboard.reply()));

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();

app.listen(3000, () => {
    console.info("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç");
});
